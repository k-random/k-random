name: Publish to Maven Central
on:
  push:
    tags:
      - '*'
jobs:
  publish-to-maven-central:
    name: Publish to maven central
    runs-on: ubuntu-latest
    # Only run one job a time to avoid conflicts
    concurrency: ci-${{ github.ref }}
    # This permission may be required to grant access for the Action to push tags
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v4
        with: # running setup-java again overwrites the settings.xml
          distribution: 'temurin'
          java-version: '17'
          server-id: central # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase
          cache: gradle
      - name: Release to Maven Central
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          export GPG_TTY=$(tty)
          git config user.name "${{ github.event.head_commit.committer.name }}"
          git config user.email "${{ github.event.head_commit.committer.email }}"
          ./gradlew clean publish -x test
      # Create a release

      - name: Run JReleaser
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PROJECT_VERSION: ${{ github.ref_name }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}

      # Persist logs

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
